/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: PublicAccess (https://sketchfab.com/public_access)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/terminal-styled-computer-dumb-terminal-ccfb7a137ecd451f8fd5760fa463976a
Title: Terminal-styled Computer (Dumb Terminal)
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, useTexture } from '@react-three/drei';
import {useFrame} from "@react-three/fiber";

export function ComputerModel(props) {
    const { nodes, materials } = useGLTF('/assets/models/computer/scene.gltf');

    const screenTexture = props.texture ? useTexture(props.texture) : null;

    const ref = useRef();
    const [startTime] = useState(() => performance.now());

    const initialRotation = Math.PI / 2;
    const duration = 1000;
    const txt = props.txt;


    const baseRotationY = props.rotation?.[1] || 0;



    useEffect(() => {
        if (ref.current) {
            ref.current.rotation.y = baseRotationY + initialRotation;
        }
    }, [txt]);


    useFrame(() => {
        if (!ref.current) return;

        const elapsed = performance.now() - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const eased = 1 - Math.pow(1 - progress, 3);

        ref.current.rotation.y = baseRotationY + initialRotation * (1 - eased);
    });

  return (
    <group {...props} dispose={null} ref={ref} >
      <group position={[0, 0.043, 0.102]} scale={[1.1, 0.7, 0.7]} >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.orange}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.black}
        />
      </group>
      <group
        position={[-3.082, 0.412, -2.572]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.015, 0.026, 0.026]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials['sp_logo_glow.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials.black}
        />
      </group>
      <group position={[0, 3.074, -2.032]} scale={[1.1, 0.7, 0.7]}>
          {/*back side*/}
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_20.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_21.geometry}
          material={materials.black}
        />
      </group>
      <group position={[-5.411, 0.144, -3.378]} scale={0.05}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_25.geometry}
          material={materials.black}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_26.geometry}
          material={materials.chrome}
        />
      </group>
      <group
        position={[0.062, 4.959, 0.379]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.013, 0.003, 0.013]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_28.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_29.geometry}
          material={materials.black}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_30.geometry}
          material={materials.Multicoated_glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_31.geometry}
          material={materials.pupil}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_32.geometry}
          material={materials.orange}
        />
      </group>
      <group
        position={[3.37, 1.545, 0.54]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.016, 0.008, 0.016]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_40.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_41.geometry}
          material={materials['chrome.001']}
        />
      </group>
      <group position={[0, 3.581, -3.263]} scale={[1.1, 0.7, 0.7]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_43.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_45.geometry}
          material={materials.pa_label}
          position={[0, -1.069, -0.003]}
          rotation={[Math.PI / 2, 0, Math.PI]}
          scale={[1.361, 2.138, 2.138]}
        />
      </group>
      <group position={[0, 0.309, 2.743]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_47.geometry}
          material={materials.orange}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_48.geometry}
          material={materials.chrome}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_49.geometry}
          material={materials.pupil}
        />
      </group>
      <group position={[2.326, 0.775, 1.578]} rotation={[-3.011, 0, Math.PI]} scale={7.2}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_56.geometry}
          material={materials['orange.001']}
          position={[0, 0.015, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_58.geometry}
          material={materials['black.001']}
          position={[0, 0.024, 0.001]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_60.geometry}
          material={materials['black.001']}
          position={[0, 0.02, 0.03]}
          rotation={[1.875, 0, 0]}
        />
      </group>
      <group position={[-0.986, 0.656, 1.594]} rotation={[0.099, -Math.PI / 2, 0]} scale={9.806}>
        <group position={[0, 0.012, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_65.geometry}
            material={materials.Klavesnice}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_66.geometry}
            material={materials.klav1}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_63.geometry}
          material={materials.black}
          position={[0, 0.012, 0]}
        />
      </group>

        {/*table*/}
      {/*<mesh*/}
      {/*  castShadow*/}
      {/*  receiveShadow*/}
      {/*  geometry={nodes.Object_4.geometry}*/}
      {/*  material={materials.Material}*/}
      {/*  position={[-0.005, -11.742, 0.361]}*/}
      {/*  scale={[6.642, 3.852, 6.642]}*/}
      {/*/>*/}

        {/*outer screen - orange*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials.black}
        position={[2.326, 0.764, 1.578]}
        scale={[1.32, 0.7, 0.7]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials.orange}
        position={[0, 3.074, -2.032]}
        scale={[1.1, 0.7, 0.7]}
      />

        {/*outer screen*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_16.geometry}
        material={materials.black}
        position={[0, 3.074, -2.032]}
        scale={[1.1, 0.7, 0.7]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_18.geometry}
        material={materials.black}
        position={[3.145, 0.09, 2.495]}
        scale={0.03}
      />

        {/*screen*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_23.geometry}
        material={materials.screen}
        position={[0, 3.074, 0.006]}
      >
          <meshBasicMaterial map={screenTexture} toneMapped={false} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_34.geometry}
        material={materials['metal_mesh.001']}
        position={[0, 3.074, 0]}
      />

        {/*logo*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_36.geometry}
        material={materials.sp_logo}
        position={[0.017, 1.213, 0.222]}
        rotation={[1.049, 0, 0]}
        scale={0.98}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_38.geometry}
        material={materials.sp_logo}
        position={[-3.403, 3.489, -0.838]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
        scale={4.266}
      />


        {/*cable*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_51.geometry}
        material={materials.black}
        position={[3.216, 0.79, -1.27]}
        scale={[1.011, 1, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_53.geometry}
        material={materials.black}
        position={[-2.581, 0.412, -2.565]}
      />
    </group>
  )
}

useGLTF.preload('/assets/models/computer/scene.gltf');